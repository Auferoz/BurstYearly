---


let accessToken, igdbData = [];
try {
    const twitchResponse = await fetch("https://id.twitch.tv/oauth2/token", {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams({
            client_id: "zn6jdy9rvb46v2qspncyfjd3xgcqgj",
            client_secret: "5de7aq852u4m5tqy1ugz2ba9u99um3",
            grant_type: "client_credentials"
        })
    });
    const twitchData = await twitchResponse.json();
    accessToken = twitchData.access_token;
} catch (error) {
    console.error("Error fetching Twitch token:", error);
}

try {
    const igdbResponse = await fetch("https://api.igdb.com/v4/artworks", {
        method: "POST",
        headers: {
            "Client-ID": "zn6jdy9rvb46v2qspncyfjd3xgcqgj",
            "Authorization": "Bearer " + accessToken,
            "Content-Type": "text/plain"
        },
        body: 'fields game,image_id; where id = 124335;'
    });
    if (!igdbResponse.ok) {
        throw new Error("IGDB fetch failed con status: " + igdbResponse.status);
    }
    igdbData = await igdbResponse.json();
} catch (error) {
    console.error("Error fetching IGDB data:", error);
}

---

<div class="bg-[#1b1e25] rounded-xl p-5 max-w-none">

    <p class="text-xl flex items-center gap-2 prose prose-invert dark:prose-dark mb-5">
        Imagenes:
    </p>

    <div class="grid grid-cols-2">
        {igdbData.map(item => (
            <img src={`https://images.igdb.com/igdb/image/upload/t_720p/${item.image_id}.webp`} alt="Game Artwork" class="w-100 rounded-lg" />
        ))}
    </div>

</div>